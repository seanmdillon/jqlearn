Searching DOM

$("#destinations li");
$("#destinations > li");
$("#destinations > li:first");
$("#destinations > li:even");
$(".class1, .class2");

Traversting the DOM
Find method:
$('li.item-ii').find('li').css('background-color', 'red');


$("li").first();
$("li").first().next();  -- this is called method chaining
$("li").first().next().prev();

you can also walk UP the DOM
$("li").first();
$("li").first().parent();  -- this selects the unordered list parent of LI

walking DOWN
$("#destinations").children("li");



$(document).ready(function() {
  var price = $('<p>From $399.99</p>');
  $('.vacation').append(price); -- NO
  $('.vacation').prepend(price); -- NO
  $('.vacation').before(price); -- NO
  $('.vacation').after(price);

  $('button').remove();

});


DOM for our page:

DOCUMENT

li	class="vacation"
   h2
      Hawaiian Vacation

   button
      Get Price



$('button')

We're going to use the jQuery Object Method .on()
	- .on(<event>, <event handler function>);

$('button').on('click', function() {
  // runs when any button is clicked
});


$('button') targetrs all buttons.
.on('click' runs when the button is clicked
function() is the code in the handler

$(document).ready(function() {
  $('button').on('click', function() {
    var price = $('<p>From $399.99</p>');
    $('.vacation').append(price);
    $('button').remove();
  });
});



Not we're going to learn about localizing the code execution.
Here's the new DOM:

document
  div id="vacations"
    ul
      li class="vacation"
        button
        p
      li class="vacation"
        button
        p

so if i use a selector $('.vacation').append(price);
  it adds var price to EVERY list item
and if i call $('button').remove();
  it removes EVERY button

so i want to use THIS
  we'd usually think we can call this.remove(); in the button code, but this won't work
    this is because "this" is not a jquery object.  so we have to wrap it in jquery code
    $(this).remove();
  so if i write this code in my function, here's where it gets to:

$(document).ready(function() {
  $('button').on('click', function() {
    var price = $('<p>From $399.99</p>');
    $('.vacation').append(price);
    $(this).remove();  // this ONLY removes THIS button that was clicked
  });
});

unfortunately, that still adds var price to EVERY button
  so we have to localize where to add price:

  change:
    $('.vacation').append(price);
  to:
    $(this).after(price);

Using .closest(<selector>)

$(this).after(price);                        // NO
$(this).parent().parent().append(price);     // seems to be okay, but what if the DOM changes
$(this).parents('.vacation').append(price);  // NO
$(this).closest('.vacation').append(price);  // YAY
  "closest" looks for the nearest ancestor w/ <selector>
  "closest" is going to find zero or one node, whereas parents is going to look for ALL ancestors w/ proper class





<div id="tours">
  <h1>Guided Tours</h1>
  <ul>
    <li class="usa tour">
      <h2>New York, New York</h2>
      <span class="details">$1,899 for 7 nights</span>
      <button class="book">Book Now</button>
    </li>
    <li class="europe tour">
      <h2>Paris, France</h2>
      <span class="details">$2,299 for 7 nights</span>
      <button class="book">Book Now</button>
    </li>
    <li class="asia tour">
      <h2>Tokyo, Japan</h2>
      <span class="details">$3,799 for 7 nights</span>
      <button class="book">Book Now</button>
    </li>
  </ul>
</div>

$(document).ready(function(){
  $('li').on('click', function(){
    var message = $("<span>Call 1-555-jquery-air to book this tour</span>");
    $(this).append(message);
    $(this).find('.book').remove();
  });
});








